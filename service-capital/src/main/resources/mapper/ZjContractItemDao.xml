<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.jluzh.capital.dao.ZjContractItemDao">

    <resultMap type="com.jluzh.capital.entity.ZjContractItem" id="ZjContractItemMap">
        <result property="id" column="id" jdbcType="INTEGER"/>
        <result property="contractName" column="contract_name" jdbcType="VARCHAR"/>
        <result property="supplierId" column="supplier_id" jdbcType="INTEGER"/>
        <result property="accountId" column="account_id" jdbcType="INTEGER"/>
        <result property="price" column="price" jdbcType="NUMERIC"/>
        <result property="invoiceAmount" column="invoice_amount" jdbcType="NUMERIC"/>
        <result property="paidAmount" column="paid_amount" jdbcType="NUMERIC"/>
        <result property="unpayAmount" column="unpay_amount" jdbcType="NUMERIC"/>
        <result property="createTime" column="create_time" jdbcType="TIMESTAMP"/>
    </resultMap>

    <!-- 批量插入 -->
    <insert id="insertBatch" keyProperty="id" useGeneratedKeys="true">
        insert into bfinance.zj_contract_item(contract_name, supplier_id, account_id, price, invoice_amount,
        paid_amount, unpay_amount, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.contractName}, #{entity.supplierId}, #{entity.accountId}, #{entity.price},
            #{entity.invoiceAmount}, #{entity.paidAmount}, #{entity.unpayAmount}, #{entity.createTime})
        </foreach>
    </insert>
    <!-- 批量插入或按主键更新 -->
    <insert id="insertOrUpdateBatch" keyProperty="id" useGeneratedKeys="true">
        insert into bfinance.zj_contract_item(contract_name, supplier_id, account_id, price, invoice_amount,
        paid_amount, unpay_amount, create_time)
        values
        <foreach collection="entities" item="entity" separator=",">
            (#{entity.contractName}, #{entity.supplierId}, #{entity.accountId}, #{entity.price},
            #{entity.invoiceAmount}, #{entity.paidAmount}, #{entity.unpayAmount}, #{entity.createTime})
        </foreach>
        on duplicate key update
        contract_name = values(contract_name) , supplier_id = values(supplier_id) , account_id = values(account_id) ,
        price = values(price) , invoice_amount = values(invoice_amount) , paid_amount = values(paid_amount) ,
        unpay_amount = values(unpay_amount) , create_time = values(create_time)
    </insert>

</mapper>

